{
    "architecture": {
        "32bit": {
            "hash": "b5f69f75e412acc65df8590da45b3894040c4f6f2de59e601239a4a88eaa63de",
            "url": "https://download.tortoisegit.org/tgit/2.18.0.0/TortoiseGit-2.18.0.0-32bit.msi"
        },
        "64bit": {
            "hash": "1d9126338c34815a5bf8014a85d268578cb0b36880dc647764094c974e0973fe",
            "url": "https://download.tortoisegit.org/tgit/2.18.0.0/TortoiseGit-2.18.0.0-64bit.msi"
        }
    },
    "autoupdate": {
        "architecture": {
            "32bit": {
                "url": "https://download.tortoisegit.org/tgit/$version/TortoiseGit-$version-32bit.msi"
            },
            "64bit": {
                "url": "https://download.tortoisegit.org/tgit/$version/TortoiseGit-$version-64bit.msi"
            }
        }
    },
    "bin": [
        "bin\\TortoiseGitUDiff.exe",
        "bin\\TortoiseGitMerge.exe",
        "bin\\TortoisePlink.exe",
        "bin\\TortoiseGitProc.exe"
    ],
    "checkver": {
        "regex": "TortoiseGit is: <a href=/tgit/([\\d\\.]+)/",
        "url": "https://download.tortoisegit.org/tgit/"
    },
    "description": "Windows Shell Interface to Git based on TortoiseSVN.",
    "extract_dir": "Program Files\\TortoiseGit",
    "homepage": "https://tortoisegit.org/",
    "license": {
        "identifier": "GPL-2.0-only"
    },
    "notes": [
        "To add TortoiseGit as a context menu option, run '$dir\\tortoisegit-install.reg'",
        "For file associations, run '$dir\\tortoisegit-install-tools.reg'",
        "Before uninstalling TortoiseGit, run '$dir\\tortoisegit-uninstall.reg' "
    ],
    "persist": [
        "bin\\snippet.txt",
        "bin\\autolist.txt",
        "Diff-Scripts"
    ],
    "pre_install": [
        "$migration = $true",
        "$visibleUserAccounts = Get-LocalUser | Where-Object { $_.Enabled -eq $true }",
        "if ($global -and $visibleUserAccounts.Count -gt 1) { $migration = $false }",
        "",
        "$appdataPath = \"$HOME\\AppData\\Roaming\\TortoiseGit\"",
        "if ((Test-Path -Path $appdataPath\\*) -and (!(Test-Path -Path $persist_dir\\*)) -and $migration) {",
        "    Write-Warning \"Migrating data from $appdataPath to $persist_dir (this may take a while)\"",
        "    New-Item -Type Directory -Path $persist_dir | Out-Null",
        "    Copy-Item -Recurse -Force $appdataPath\\* $persist_dir\\",
        "} elseif (!($migration)) {",
        "    Write-Warning \"A global Scoop installation was detected with multiple user accounts. Please see the notes at the end of the install process.\"",
        "}",
        "",
        "'ignorecomments.txt', 'regexfilters.ini', 'TortoiseGitMerge-RibbonSettings','1033.dic', '2048.dic', 'autolist.txt', 'snippet.txt' | ForEach-Object {",
        "   $inPer = !(Test-Path -Path $persist_dir\\$_)",
        "    if ($inPer) {",
        "        New-Item -Type File $dir/$_ | Out-Null",
        "    }",
        "}"
    ],
    "post_install": [
        "$path = 'HKCU:\\Software\\TortoiseGit'",
        "if (!(Test-path \"$path\")) {",
        "    New-Item $path | Out-Null",
        "    New-ItemProperty -Path $path -Name 'VersionCheck' -PropertyType DWord -Value 0 -Force | Out-Null",
        "    New-ItemProperty -Path $path -Name 'MsysGit' -PropertyType String -Value \"$env:GIT_INSTALL_ROOT\\bin\" -Force | Out-Null",
        "}",
        "$bucketdir = Find-BucketDirectory($bucket)",
        "",
        "ensure \"$dir\\data\\ProgramData\" | Out-Null",
        "ensure \"$dir\\data\\AppData\" | Out-Null",
        "ensure \"$dir\\data\\LocalAppData\" | Out-Null",
        "ensure \"$dir\\data\\UserProfile\" | Out-Null",
        "ensure \"$dir\\data\\PublicProfile\" | Out-Null",
        "",
        "$companyname = 'Microsoft'",
        "",
        "ensure \"$env:LocalAppData\\$companyname\" | Out-Null",
        "if (-not (Test-Path \"$env:LocalAppData\\$companyname\\BingWallpaperApp\")) {",
        "    cmd.exe /c mklink /j \"$env:LocalAppData\\$companyname\\BingWallpaperApp\" \"$dir\\data\\LocalAppData\"",
        "}",
        "$bucketdir = (($bucketdir | split-path -Parent) | Split-Path -Parent) | Join-Path -ChildPath 'perXautomatik'",
        "$escdir = $dir -replace \"\\\\\",\"\\\\\"",
        "(gc \"$bucketdir\\scripts\\tortoisegit\\tortoisegit-install.reg.templ\") | % {$_ -replace \"%TGITHOME%\",\"$escdir\"} | out-file -enc utf8 \"$dir\\tortoisegit-install.reg\"",
        "(gc \"$bucketdir\\scripts\\tortoisegit\\tortoisegit-install-tools.reg.templ\") | % {$_ -replace \"%TGITHOME%\",\"$escdir\"} | out-file -enc utf8 \"$dir\\tortoisegit-install-tools.reg\"",
        "cp \"$bucketdir\\scripts\\tortoisegit\\tortoisegit-uninstall.reg\" \"$dir\""
    ],
    "shortcuts": [
        [
            "bin\\TortoiseGitMerge.exe",
            "TortoiseGit Merge"
        ],
        [
            "bin\\TortoiseGitBlame.exe",
            "TortoiseGit Blame"
        ],
        [
            "bin\\TortoiseGitIDiff.exe",
            "TortoiseGit Diff"
        ],
        [
            "bin\\TortoiseGitProc.exe",
            "TortoiseGit Settings",
            "/command:settings"
        ]
    ],
    "version": "2.18.0.0"
}
